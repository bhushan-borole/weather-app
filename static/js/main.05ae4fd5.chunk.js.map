{"version":3,"sources":["components/CitySelector.js","apis/config.js","App.js","reportWebVitals.js","index.js"],"names":["CitySelector","useState","city","setCity","onSearch","fetch","then","response","json","result","console","log","Row","Col","xs","className","FormControl","placeholder","onChange","event","target","value","onKeyDown","keyCode","Button","onClick","App","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"mPAgDeA,EA3CM,WAAO,IAAD,EACDC,mBAAS,IADR,mBAClBC,EADkB,KACZC,EADY,KAGnBC,EAAW,WACfC,MAAM,GAAD,OCRmB,iCDQnB,gCAAwCH,EAAxC,kBCTc,mCDSd,kBACFI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAYC,QAAQC,IAAIF,OASlC,OACE,qCACE,cAACG,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,sDAIJ,cAACD,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,UAAU,cAAtB,SACE,cAACC,EAAA,EAAD,CACEC,YAAY,aACZC,SAAU,SAACC,GAAD,OAAWhB,EAAQgB,EAAMC,OAAOC,QAC1CA,MAAOnB,EACPoB,UApBQ,SAACH,GACK,KAAlBA,EAAMI,SACRnB,WAuBA,cAACQ,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAACW,EAAA,EAAD,CAAQC,QAASrB,EAAjB,mC,gBE5BKsB,MARf,WACE,OACE,cAACC,EAAA,EAAD,CAAWZ,UAAU,MAArB,SACE,cAAC,EAAD,OCISa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.05ae4fd5.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport {Row, Col, FormControl, Button} from 'react-bootstrap';\r\nimport {API_KEY, API_BASE_URL} from '../apis/config';\r\n\r\n\r\nconst CitySelector = () => {\r\n  const [city, setCity] = useState('');\r\n\r\n  const onSearch = () => {\r\n    fetch(`${API_BASE_URL}/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=metric`)\r\n      .then((response) => response.json())\r\n      .then((result) => console.log(result));\r\n  };\r\n\r\n  const onKeyDown = (event) => {\r\n    if (event.keyCode === 13) {\r\n      onSearch();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          <h1>Search your city</h1>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col xs={4} className=\"text-center\">\r\n          <FormControl\r\n            placeholder=\"Enter city\"\r\n            onChange={(event) => setCity(event.target.value)}\r\n            value={city}\r\n            onKeyDown={onKeyDown}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col>\r\n          <Button onClick={onSearch}>Check Weather</Button>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CitySelector;","export const API_KEY = '11d56e2526def454d2329dda463a8e78';\r\nexport const API_BASE_URL = 'http://api.openweathermap.org/';","import React from 'react';\nimport CitySelector from './components/CitySelector';\nimport './App.css';\nimport {Container} from 'react-bootstrap';\n\nfunction App() {\n  return (\n    <Container className=\"App\">\n      <CitySelector />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}